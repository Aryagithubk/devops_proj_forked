---
- name: Deploy React Frontend Application
  hosts: frontend
  become: true
  gather_facts: true

  vars:
    app_name: frontend
    app_dir: /opt/frontend
    build_dir: /opt/frontend/build
    node_version: "18.x"
    backend_ip: "{{ hostvars[groups['backend'][0]]['ansible_default_ipv4']['address'] }}"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - curl
          - git
          - nginx
        state: present

    - name: Add NodeSource repository
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_{{ node_version }} | bash -
      args:
        creates: /etc/apt/sources.list.d/nodesource.list

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: true

    - name: Verify Node.js installation
      command: node --version
      register: node_version_output
      changed_when: false

    - name: Display Node.js version
      debug:
        msg: "Node.js {{ node_version_output.stdout }} installed"

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'

    - name: Copy frontend application files
      copy:
        src: "{{ playbook_dir }}/../../applications/frontend/"
        dest: "{{ app_dir }}/"
        mode: '0644'

    - name: Create .env file with backend URL
      copy:
        content: |
          REACT_APP_BACKEND_URL=http://{{ backend_ip }}:5000
        dest: "{{ app_dir }}/.env"
        mode: '0644'

    - name: Install npm dependencies
      npm:
        path: "{{ app_dir }}"
        state: present

    - name: Build React application
      command: npm run build
      args:
        chdir: "{{ app_dir }}"
      environment:
        NODE_ENV: production
        CI: "true"

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Create nginx configuration
      copy:
        content: |
          server {
              listen 80;
              server_name _;
              root {{ build_dir }};
              index index.html;

              location / {
                  try_files $uri $uri/ /index.html;
              }

              location /api {
                  proxy_pass http://{{ backend_ip }}:5000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }

              # Security headers
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header X-XSS-Protection "1; mode=block" always;

              # Gzip compression
              gzip on;
              gzip_vary on;
              gzip_min_length 1024;
              gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
          }
        dest: /etc/nginx/sites-available/frontend
        mode: '0644'

    - name: Enable nginx site
      file:
        src: /etc/nginx/sites-available/frontend
        dest: /etc/nginx/sites-enabled/frontend
        state: link

    - name: Test nginx configuration
      command: nginx -t
      register: nginx_test
      changed_when: false

    - name: Reload nginx
      systemd:
        name: nginx
        state: reloaded
        enabled: true

    - name: Wait for nginx to start
      wait_for:
        port: 80
        delay: 2
        timeout: 30

    - name: Test frontend health
      uri:
        url: "http://localhost/"
        method: GET
        status_code: 200
      register: health_check
      retries: 3
      delay: 5

    - name: Display frontend status
      debug:
        msg: "Frontend is running successfully at http://{{ ansible_default_ipv4.address }}"
